{"version":3,"sources":["util/drawAnnotations.ts","app/hooks.ts","util/localStateHandler.ts","app/imageState.ts","util/math.ts","util/imageProcess.ts","models/inference.ts","models/tinyYoloV2.ts","components/InferenceMenu.tsx","components/ImageCard.tsx","components/CustomImageList.tsx","components/CustomAppbar.tsx","components/AddContentFab.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["drawBbox","ctx","annotation","imgW","imgH","highlightAnnotationId","beginPath","rect","box","id","fillStyle","color","fill","stroke","drawPolygon","moveTo","polygon","forEach","el","idx","lineTo","closePath","useAppDispatch","useDispatch","useAppSelector","useSelector","saveStateIds","event","localStorage","setItem","JSON","stringify","saveImageState","imageSlice","createSlice","name","initialState","images","ids","getItem","parse","loadStateIds","map","String","loadImageState","filter","reducers","updateImage","state","action","payload","addImage","removeImage","removeItem","actions","softmax","logits","maxLogit","Math","max","scores","l","exp","denom","reduce","a","b","s","sigmoid","x","calcIoU","bbox1","bbox2","xLeft","yTop","xRight","min","yBottom","intersectionArea","ModelStillLoadingError","message","Error","NotImplementedError","InferenceBase","modelSrc","dims","executionProvider","modelFile","session","loaded","error","this","ArrayBuffer","undefined","jimpImage","output","inputImage","src","loadImageToJimp","preprocessedImage","preprocess","clone","inputTensor","imageToTensor","feeds","inputNames","console","log","run","outputData","outputNames","processedOutput","postprocess","Promise","resolve","reject","fetch","modelResponse","arrayBuffer","InferenceSession","create","executionProviders","graphOptimizationLevel","Jimp","read","then","imageBuffer","imageData","image","imageBufferData","bitmap","data","redArray","Array","greenArray","blueArray","i","length","push","jimpToImageArrays","float32Data","transposedData","concat","Float32Array","arraysToFloat32Data","Tensor","TinyYoloV2","classes","anchors","modelName","classesColor","contain","time","offset","anchorX","anchorY","anchorId","bboxIdx","paddings","targetDims","originalDims","resizeFactorX","resizeFactorY","fullPaddings","addOdd","floor","calcPaddingAfterResize","getWidth","getHeight","outputBoxes","currentBboxList","currentBbox","splice","currentC","softmaxOut","slice","className","indexOf","classColor","width","height","bbox","uuidv4","score","model","type","timeEnd","bboxes","keepBbox","iouThreshold","innerEl","innerIdx","nonMaximumSupression","tinyYoloV2Executor","loadModel","InferenceMenu","updateAnnotation","useState","loading","setLoading","success","setSuccess","inferenceTime","setInferenceTime","Box","Button","sx","background","theme","palette","dark","primary","main","variant","disabled","onClick","startTime","Date","inference","result","round","getTime","catch","e","LinearProgress","ImageCard","title","dateCreated","highlighted","annotations","dispatch","resizeSize","setResizeSize","showLabel","setShowLabel","highlightedLabel","setHighlightedLabel","annotationCanvasRef","useRef","document","createElement","imageRef","updateInferenceResult","inferenceResult","annotationIdToRemove","processedAnnotation","useEffect","img","Image","onload","newResizeSize","currentTarget","current","getContext","drawImage","canvas","clearRect","lineWidth","includes","strokeStyle","drawAnnotations","Card","margin","marginTop","CardHeader","secondary","IconButton","subheader","toDateString","CardMedia","style","position","marginRight","marginLeft","cursor","ref","CardContent","paper","flexWrap","overflow","Chip","label","icon","backgroundColor","onDelete","deleteIcon","onMouseOver","onMouseOut","renderAnnotationChips","CardActions","disableSpacing","CustomImageList","modalCardId","setModalCardId","display","justifyContent","justifyItems","alignContent","props","window","innerWidth","innerHeight","key","Modal","open","onClose","Container","CustomAppbar","AppBar","bottom","top","padding","Typography","component","flexGrow","AddContentFab","takenImage","setTakenImage","imageName","setImageName","setDateCreated","inputFileRef","handleModalClose","Fab","right","click","Grid","container","spacing","item","xs","alignItems","size","accept","onChange","inp","files","reader","FileReader","rescaleRatio","tmp_img","rescaledSize","toDataURL","resizeImageToMaximum1Mb","target","readAsDataURL","createTheme","mode","default","App","ThemeProvider","store","configureStore","reducer","imageReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4119505.chunk.js","sourcesContent":["import { RefObject } from \"react\";\nimport {\n  anyAnnoationObject,\n  bboxAnnotationObject,\n  polygonAnnotationObject,\n} from \"./types\";\n\nexport const drawAnnotations = (\n  annotations: anyAnnoationObject[],\n  canvas: RefObject<HTMLCanvasElement>,\n  imgW: number,\n  imgH: number,\n  highlightAnnotationId: string | null,\n  filter: string[]\n) => {\n  // Get context\n  const ctx = canvas.current?.getContext(\"2d\");\n  if (ctx) {\n    ctx.clearRect(0, 0, imgW, imgH);\n    ctx.lineWidth = 2;\n\n    annotations.forEach((el) => {\n      if (filter.includes(el.id)) {\n        ctx.strokeStyle = el.color;\n        if (el.type === \"bbox\") {\n          drawBbox(ctx, el, imgW, imgH, highlightAnnotationId);\n        }\n        if (el.type === \"polygon\") {\n          drawPolygon(ctx, el, imgW, imgH, highlightAnnotationId);\n        }\n      }\n    });\n  }\n};\n\nconst drawBbox = (\n  ctx: CanvasRenderingContext2D,\n  annotation: bboxAnnotationObject,\n  imgW: number,\n  imgH: number,\n  highlightAnnotationId: string | null\n) => {\n  ctx.beginPath();\n\n  ctx.rect(\n    annotation.box[0] * imgW,\n    annotation.box[1] * imgH,\n    annotation.box[2] * imgW,\n    -annotation.box[3] * imgH\n  );\n  if (highlightAnnotationId === annotation.id) {\n    ctx.fillStyle = annotation.color + \"4D\";\n    ctx.fill();\n  }\n  ctx.stroke();\n};\n\nconst drawPolygon = (\n  ctx: CanvasRenderingContext2D,\n  annotation: polygonAnnotationObject,\n  imgW: number,\n  imgH: number,\n  highlightAnnotationId: string | null\n) => {\n  ctx.beginPath();\n  ctx.moveTo(annotation.polygon[0][0] * imgW, annotation.polygon[0][1] * imgH);\n  annotation.polygon.forEach((el: number[], idx: number) => {\n    if (idx === 0) {\n      ctx.moveTo(el[0] * imgW, (1 - el[1]) * imgH);\n    } else {\n      ctx.lineTo(el[0] * imgW, (1 - el[1]) * imgH);\n    }\n  });\n  if (highlightAnnotationId === annotation.id) {\n    ctx.fillStyle = annotation.color + \"4D\";\n    ctx.fill();\n  }\n  ctx.closePath();\n  ctx.stroke();\n};\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { imageCardObject } from \"./types\";\n\nconst idName = \"Ids\";\n\nexport const saveStateIds = (event: string[]) => {\n  localStorage.setItem(idName, JSON.stringify(event));\n};\n\nexport const loadStateIds = (): string[] => {\n  const ids = localStorage.getItem(idName);\n  return ids !== null ? JSON.parse(ids) : [];\n};\n\nexport const saveImageState = (event: imageCardObject) => {\n  localStorage.setItem(event.id, JSON.stringify(event));\n};\n\nexport const loadImageState = (id: string): imageCardObject => {\n  return JSON.parse(String(localStorage.getItem(id)));\n};\n\nexport const removeImageState = (id: string) => {\n  localStorage.removeItem(id);\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { imageCardObject } from \"../util/types\";\nimport {\n  saveImageState,\n  removeImageState,\n  loadImageState,\n  saveStateIds,\n  loadStateIds,\n} from \"../util/localStateHandler\";\n\nexport const imageSlice = createSlice({\n  name: \"images\",\n  initialState: {\n    images: loadStateIds()\n      .map((id: string) => loadImageState(id))\n      .filter((el: imageCardObject | null) => el !== null),\n  },\n  reducers: {\n    updateImage: (state, action) => {\n      state.images = state.images.map((el: imageCardObject) =>\n        el.id === action.payload.id ? action.payload : el\n      );\n      saveImageState(action.payload);\n    },\n    addImage: (state, action) => {\n      state.images = [...state.images, action.payload];\n      saveImageState(action.payload);\n      saveStateIds(state.images.map((el: imageCardObject) => el.id));\n    },\n    removeImage: (state, action) => {\n      state.images = [\n        ...state.images.filter(\n          (el: imageCardObject) => el.id !== action.payload.id\n        ),\n      ];\n      removeImageState(action.payload.id);\n      saveStateIds(state.images.map((el: imageCardObject) => el.id));\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { addImage, updateImage, removeImage } = imageSlice.actions;\n\nexport default imageSlice.reducer;\n","export const softmax = (logits: number[]) => {\n  const maxLogit = Math.max(...logits);\n  const scores = logits.map((l: number) => Math.exp(l - maxLogit));\n  const denom = scores.reduce((a: number, b: number) => a + b);\n  return scores.map((s: number) => s / denom);\n};\n\nexport const sigmoid = (x: number) => Math.exp(x) / (Math.exp(x) + 1);\n","import { bboxAnnotationObject } from \"./types\";\nimport * as Jimp from \"jimp\";\n\nexport const jimpToImageArrays = (image: Jimp) => {\n  var imageBufferData = image.bitmap.data;\n\n  const [redArray, greenArray, blueArray] = [\n    new Array<number>(),\n    new Array<number>(),\n    new Array<number>(),\n  ];\n\n  for (let i = 0; i < imageBufferData.length; i += 4) {\n    redArray.push(imageBufferData[i]);\n    greenArray.push(imageBufferData[i + 1]);\n    blueArray.push(imageBufferData[i + 2]);\n  }\n\n  return [redArray, greenArray, blueArray];\n};\n\nexport const arraysToFloat32Data = (\n  redArray: number[],\n  blueArray: number[],\n  greenArray: number[],\n  dims: number[]\n) => {\n  const transposedData = redArray.concat(greenArray).concat(blueArray);\n  let i,\n    l = transposedData.length;\n  const float32Data = new Float32Array(dims[1] * dims[2] * dims[3]);\n  for (i = 0; i < l; i++) {\n    float32Data[i] = transposedData[i];\n  }\n  return float32Data;\n};\n\nexport const calcPaddingAfterResize = (\n  targetDims: number[],\n  originalDims: number[]\n) => {\n  const resizeFactorX = targetDims[0] / originalDims[0];\n  const resizeFactorY = targetDims[1] / originalDims[1];\n\n  var paddings: number[];\n\n  if (resizeFactorX < resizeFactorY) {\n    const fullPaddings = targetDims[0] - resizeFactorX * originalDims[1];\n    const addOdd = Math.floor(fullPaddings) % 2 === 0 ? 0 : 1;\n    paddings = [\n      0,\n      0,\n      Math.floor(fullPaddings / 2),\n      Math.floor(fullPaddings / 2) + addOdd,\n    ];\n  } else {\n    const fullPaddings = targetDims[1] - resizeFactorY * originalDims[0];\n    const addOdd = Math.floor(fullPaddings) % 2 === 0 ? 0 : 1;\n    paddings = [\n      Math.floor(fullPaddings / 2),\n      Math.floor(fullPaddings / 2) + addOdd,\n      0,\n      0,\n    ];\n  }\n  return paddings;\n};\n\nconst calcIoU = (bbox1: number[], bbox2: number[]) => {\n  const xLeft = Math.max(bbox1[0], bbox2[0]);\n  const yTop = Math.max(bbox1[1], bbox2[1]);\n  const xRight = Math.min(bbox1[0] + bbox1[2], bbox2[0] + bbox2[2]);\n  const yBottom = Math.min(bbox1[1] + bbox1[3], bbox2[1] + bbox2[3]);\n\n  if (xRight < xLeft || yBottom < yTop) {\n    return 0;\n  }\n\n  const intersectionArea = (xRight - xLeft) * (yBottom - yTop);\n\n  const bbox1Area = bbox1[2] * bbox1[3];\n  const bbox2Area = bbox2[2] * bbox2[3];\n\n  return intersectionArea / (bbox1Area + bbox2Area - intersectionArea);\n};\n\nexport const nonMaximumSupression = (\n  bboxes: bboxAnnotationObject[],\n  iouThreshold: number = 0.5\n): bboxAnnotationObject[] => {\n  let keepBbox: boolean;\n  return bboxes.filter((el, idx) => {\n    keepBbox = true;\n    bboxes.forEach((innerEl, innerIdx) => {\n      if (\n        calcIoU(el.box, innerEl.box) > iouThreshold &&\n        el.score < innerEl.score\n      ) {\n        keepBbox = false;\n      }\n    });\n    return keepBbox;\n  });\n};\n","import { InferenceSession, Tensor, TypedTensor } from \"onnxruntime-web\";\nimport * as Jimp from \"jimp\";\nimport { anyAnnoationObject } from \"../util/types\";\nimport { arraysToFloat32Data, jimpToImageArrays } from \"../util/imageProcess\";\n\nexport class ModelStillLoadingError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"ModelStillLoading\";\n  }\n}\n\nexport class NotImplementedError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"NotImplementedError\";\n  }\n}\n\nexport default class InferenceBase {\n  modelSrc: string;\n  modelFile: ArrayBuffer;\n  executionProvider: string[];\n  dims: number[];\n  session: InferenceSession | undefined;\n  loaded: boolean;\n  error: boolean;\n\n  constructor(modelSrc: string, dims: number[], executionProvider: string[]) {\n    this.modelSrc = modelSrc;\n    this.dims = dims;\n    this.executionProvider = executionProvider;\n    this.modelFile = new ArrayBuffer(0);\n    this.session = undefined;\n    this.loaded = false;\n    this.error = false;\n  }\n\n  // Implemented functions\n  preprocess(jimpImage: Jimp): Jimp {\n    throw new NotImplementedError(\"The fn preprocess needs to be implemented\");\n  }\n\n  postprocess(\n    output: TypedTensor<\"float32\">,\n    inputImage: Jimp\n  ): anyAnnoationObject[] {\n    throw new NotImplementedError(\"The fn postprocess needs to be implemented\");\n  }\n\n  // Standard functions\n  async inference(src: string) {\n    this.error = false;\n    let processedOutput: anyAnnoationObject[];\n\n    if (this.session === undefined) {\n      throw new ModelStillLoadingError(\n        `Model ${this.modelSrc} is still loading`\n      );\n    }\n\n    try {\n      const inputImage = await this.loadImageToJimp(src);\n      const preprocessedImage = this.preprocess(inputImage.clone());\n      const inputTensor = this.imageToTensor(preprocessedImage);\n      const feeds: Record<string, TypedTensor<\"float32\">> = {};\n\n      feeds[this.session.inputNames[0]] = inputTensor;\n\n      console.log(`Loaded this feeds:`);\n      console.log(feeds);\n\n      const outputData = await this.session.run(feeds);\n      const output: any = outputData[this.session.outputNames[0]];\n      processedOutput = this.postprocess(output, inputImage);\n\n      console.log(\"Inference result\");\n      console.log(processedOutput);\n    } catch (e) {\n      console.log(e);\n      this.error = true;\n    }\n    return new Promise<anyAnnoationObject[]>((resolve, reject) => {\n      this.error ? reject([]) : resolve(processedOutput);\n    });\n  }\n\n  // Util for class\n  async loadModel() {\n    let modelResponse = await fetch(this.modelSrc);\n    this.modelFile = await modelResponse.arrayBuffer();\n    console.log(\"Loading model file:\");\n    console.log(this.modelFile);\n    this.session = await InferenceSession.create(this.modelFile, {\n      executionProviders: this.executionProvider,\n      graphOptimizationLevel: \"all\",\n    });\n  }\n\n  async loadImageToJimp(src: string) {\n    var imageData = await Jimp.default.read(src).then((imageBuffer: Jimp) => {\n      return imageBuffer;\n    });\n    return imageData;\n  }\n\n  imageToTensor(imageData: Jimp) {\n    const [redArray, greenArray, blueArray] = jimpToImageArrays(imageData);\n\n    const float32Data = arraysToFloat32Data(\n      redArray,\n      greenArray,\n      blueArray,\n      this.dims\n    );\n\n    const inputTensor: TypedTensor<\"float32\"> = new Tensor(\n      \"float32\",\n      float32Data,\n      this.dims\n    );\n\n    return inputTensor;\n  }\n}\n","import { TypedTensor } from \"onnxruntime-web\";\nimport * as Jimp from \"jimp\";\nimport { sigmoid, softmax } from \"../util/math\";\nimport { bboxAnnotationObject, anyAnnoationObject } from \"../util/types\";\nimport InferenceBase from \"./inference\";\nimport {\n  calcPaddingAfterResize,\n  nonMaximumSupression,\n} from \"../util/imageProcess\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass TinyYoloV2 extends InferenceBase {\n  classes: string[];\n  anchors: number[];\n  modelName: string;\n  classesColor: string[];\n\n  constructor() {\n    const modelSrc = process.env.PUBLIC_URL + \"/tinyyolov2-8.onnx\";\n    const dims = [1, 3, 416, 416];\n    const executionProvider = [\"webgl\"];\n\n    super(modelSrc, dims, executionProvider);\n\n    this.modelName = \"Tiny Yolo V2\";\n    this.classes = [\n      \"aeroplane\",\n      \"bicycle\",\n      \"bird\",\n      \"boat\",\n      \"bottle\",\n      \"bus\",\n      \"car\",\n      \"cat\",\n      \"chair\",\n      \"cow\",\n      \"diningtable\",\n      \"dog\",\n      \"horse\",\n      \"motorbike\",\n      \"person\",\n      \"pottedplant\",\n      \"sheep\",\n      \"sofa\",\n      \"train\",\n      \"tvmonitor\",\n    ];\n    this.classesColor = [\n      \"#e6194b\",\n      \"#3cb44b\",\n      \"#ffe119\",\n      \"#4363d8\",\n      \"#f58231\",\n      \"#911eb4\",\n      \"#46f0f0\",\n      \"#f032e6\",\n      \"#bcf60c\",\n      \"#fabebe\",\n      \"#008080\",\n      \"#e6beff\",\n      \"#9a6324\",\n      \"#fffac8\",\n      \"#800000\",\n      \"#aaffc3\",\n      \"#808000\",\n      \"#ffd8b1\",\n      \"#000075\",\n      \"#109101\",\n      \"#ffffff\",\n      \"#000000\",\n    ];\n    this.anchors = [\n      1.08, 1.19, 3.42, 4.41, 6.63, 11.38, 9.42, 5.11, 16.62, 10.52,\n    ];\n  }\n\n  preprocess(jimpImage: Jimp): Jimp {\n    return jimpImage.contain(this.dims[2], this.dims[3]);\n  }\n\n  postprocess(\n    output: TypedTensor<\"float32\">,\n    inputImage: Jimp\n  ): anyAnnoationObject[] {\n    // Expected dims of output: [1, 125, 13, 13]\n    console.time(\"Postprocess time\");\n\n    // Prepare variables for loops and processing\n    var [offset, anchorX, anchorY, anchorId, bboxIdx] = [0, 0, 0, 0, 0];\n    const stepSize = 13 * 13;\n    const paddings = calcPaddingAfterResize(\n      [this.dims[2], this.dims[3]],\n      [inputImage.getWidth(), inputImage.getHeight()]\n    );\n    var outputBoxes: bboxAnnotationObject[] = [];\n\n    // We will use the indexes to splice the FloatArray and extract all bboxes\n    for (anchorY; anchorY < 13; anchorY++) {\n      anchorX = 0;\n      for (anchorX; anchorX < 13; anchorX++) {\n        var currentBboxList: number[] = [];\n        anchorId = 0;\n        for (anchorId; anchorId < 125; anchorId++) {\n          currentBboxList.push(output.data[anchorId * stepSize + offset]);\n        }\n        bboxIdx = 0;\n        for (bboxIdx; bboxIdx < 5; bboxIdx++) {\n          var currentBbox = currentBboxList.splice(0, 25);\n          const currentC = sigmoid(currentBbox[4]);\n          if (currentC > 0.3) {\n            // Actual processing of bbox\n            const softmaxOut = softmax(\n              currentBbox.slice(5, currentBbox.length)\n            );\n            const className =\n              this.classes[softmaxOut.indexOf(Math.max(...softmaxOut))];\n            const classColor =\n              this.classesColor[softmaxOut.indexOf(Math.max(...softmaxOut))];\n\n            const width = //@ts-ignore\n              Math.exp(currentBbox[2]) * this.anchors[bboxIdx * 2] * 32;\n            const height = //@ts-ignore\n              Math.exp(currentBbox[3]) * this.anchors[bboxIdx * 2 + 1] * 32;\n            var bbox = [\n              ((sigmoid(currentBbox[0]) + anchorX) * 32 - width / 2) /\n                this.dims[2],\n              ((sigmoid(currentBbox[1]) + anchorY) * 32 + height / 2) /\n                this.dims[3],\n              width / (this.dims[2] - paddings[0] - paddings[1]),\n              height / (this.dims[3] - paddings[2] - paddings[3]),\n            ];\n\n            bbox = [\n              Math.min(Math.max(bbox[0], 0), 1),\n              Math.min(Math.max(bbox[1], 0), 1),\n              Math.min(Math.max(bbox[2], 0), 1),\n              Math.min(Math.max(bbox[3], 0), 1),\n            ];\n\n            outputBoxes.push({\n              className: className,\n              color: classColor,\n              id: uuidv4(),\n              score: currentC,\n              model: this.modelName,\n              type: \"bbox\",\n              box: bbox,\n            });\n          }\n        }\n        offset++;\n      }\n    }\n    console.timeEnd(\"Postprocess time\");\n\n    return nonMaximumSupression(outputBoxes);\n  }\n}\n\nexport const tinyYoloV2Executor = new TinyYoloV2();\ntinyYoloV2Executor.loadModel();\n","//MUI\nimport Button from \"@mui/material/Button\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport Box from \"@mui/material/Box\";\nimport { useState } from \"react\";\n\n//Custom\nimport { tinyYoloV2Executor } from \"../models/tinyYoloV2\";\nimport { theme } from \"../App\";\nimport { anyAnnoationObject } from \"../util/types\";\n\ninterface InferenceMenuProps {\n  src: string;\n  updateAnnotation: (annotations: anyAnnoationObject[]) => void;\n}\n\nexport default function InferenceMenu({\n  src,\n  updateAnnotation,\n}: InferenceMenuProps) {\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [inferenceTime, setInferenceTime] = useState<null | number>(null);\n\n  const inference = () => {\n    console.log(\"Start inference\");\n    setLoading(true);\n    const startTime = new Date();\n    tinyYoloV2Executor\n      .inference(src)\n      .then((result) => {\n        updateAnnotation(result);\n        setInferenceTime(\n          Math.round((new Date().getTime() - startTime.getTime()) / 100) / 10\n        );\n        setLoading(false);\n        setSuccess(true);\n      })\n      .catch((e) => {\n        setLoading(false);\n        setSuccess(false);\n      });\n  };\n\n  return (\n    <Box>\n      <Button\n        sx={{\n          background: success\n            ? theme.palette.success.dark\n            : theme.palette.primary.main,\n        }}\n        variant=\"contained\"\n        disabled={loading}\n        onClick={inference}\n      >\n        {inferenceTime ? `Inference (${inferenceTime} Sec)` : \"Inference\"}\n      </Button>\n\n      {loading && <LinearProgress />}\n    </Box>\n  );\n}\n","// MUI\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport IconButton from \"@mui/material/IconButton\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport StarBorderIcon from \"@mui/icons-material/StarBorder\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport Chip from \"@mui/material/Chip\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport HexagonOutlinedIcon from \"@mui/icons-material/HexagonOutlined\";\nimport ImageOutlinedIcon from \"@mui/icons-material/ImageOutlined\";\n\n// Own\nimport {\n  anyAnnoationObject,\n  bboxAnnotationObject,\n  classAnnotationObject,\n  imageCardObject,\n  polygonAnnotationObject,\n} from \"../util/types\";\nimport { drawAnnotations } from \"../util/drawAnnotations\";\nimport { theme } from \"../App\";\nimport { useAppDispatch } from \"../app/hooks\";\nimport { updateImage, removeImage } from \"../app/imageState\";\nimport InferenceMenu from \"./InferenceMenu\";\n\n// React\nimport { useEffect, useRef, useState } from \"react\";\n\nexport interface imageCardProps extends imageCardObject {\n  width: number;\n  height: number;\n  onClick?: () => void;\n}\n\nexport default function ImageCard({\n  id,\n  src,\n  title,\n  dateCreated,\n  highlighted,\n  annotations,\n  width,\n  height,\n  onClick,\n}: imageCardProps) {\n  // States and refs\n  const dispatch = useAppDispatch();\n  const [resizeSize, setResizeSize] = useState([0, 0]);\n  const [showLabel, setShowLabel] = useState<string[]>(\n    annotations?.map((el) => {\n      return el.id;\n    })\n  );\n  const [highlightedLabel, setHighlightedLabel] = useState<string | null>(null);\n\n  const annotationCanvasRef = useRef<HTMLCanvasElement>(\n    document.createElement(\"canvas\")\n  );\n  const imageRef = useRef<HTMLCanvasElement>(document.createElement(\"canvas\"));\n\n  // Internal functions\n\n  const updateInferenceResult = (\n    inferenceResult: anyAnnoationObject[],\n    annotationIdToRemove: string | null = null\n  ) => {\n    var processedAnnotation = annotations;\n    if (annotationIdToRemove) {\n      processedAnnotation = annotations.filter(\n        (el) => el.id !== annotationIdToRemove\n      );\n    }\n    dispatch(\n      updateImage({\n        id: id,\n        src: src,\n        title: title,\n        dateCreated: dateCreated,\n        highlighted: highlighted,\n        annotations: [...processedAnnotation, ...inferenceResult],\n      })\n    );\n    setShowLabel([\n      ...showLabel,\n      ...inferenceResult.map((el: anyAnnoationObject) => el.id),\n    ]);\n  };\n\n  const renderAnnotationChips = (annotations: anyAnnoationObject[]) => {\n    return annotations?.map(\n      (\n        el:\n          | bboxAnnotationObject\n          | polygonAnnotationObject\n          | classAnnotationObject\n      ) => {\n        return (\n          <Chip\n            label={el.className}\n            key={el.id}\n            icon={\n              el.type === \"bbox\" ? (\n                <CheckBoxOutlineBlankIcon />\n              ) : el.type === \"polygon\" ? (\n                <HexagonOutlinedIcon />\n              ) : (\n                <ImageOutlinedIcon />\n              )\n            }\n            sx={{\n              marginLeft: \"5px\",\n              marginRight: \"5px\",\n              backgroundColor: showLabel.includes(el.id) ? el.color : null,\n            }}\n            variant={showLabel.includes(el.id) ? \"filled\" : \"outlined\"}\n            // Functions\n            onClick={() => {\n              if (showLabel?.includes(el.id)) {\n                setShowLabel(showLabel.filter((id) => el.id !== id));\n              } else {\n                setShowLabel([...showLabel, el.id]);\n              }\n            }}\n            onDelete={() => updateInferenceResult([], el.id)}\n            deleteIcon={<DeleteIcon />}\n            onMouseOver={() => {\n              setHighlightedLabel(el.id);\n            }}\n            onMouseOut={() => {\n              setHighlightedLabel(null);\n            }}\n          />\n        );\n      }\n    );\n  };\n\n  // Effects\n  useEffect(() => {\n    const img = new Image();\n    img.onload = (el: any) => {\n      // Not optimal, however the solution does not work: https://www.kindacode.com/article/react-typescript-image-onload-onerror-events/\n      let newResizeSize;\n\n      newResizeSize = [\n        el?.currentTarget?.width * ((height * 0.6) / el?.currentTarget?.height),\n        height * 0.6,\n      ];\n      if (newResizeSize[0] > width) {\n        newResizeSize = [\n          width,\n          el?.currentTarget?.height * (width / el?.currentTarget?.width),\n        ];\n      }\n\n      setResizeSize(newResizeSize);\n      // Draw on image canvas\n      imageRef?.current\n        .getContext(\"2d\")\n        ?.drawImage(img, 0, 0, newResizeSize[0], newResizeSize[1]);\n    };\n    img.src = src;\n  }, [height, width, src]);\n\n  useEffect(() => {\n    if (resizeSize[0] !== 0 && annotationCanvasRef !== null) {\n      drawAnnotations(\n        annotations,\n        annotationCanvasRef,\n        resizeSize[0],\n        resizeSize[1],\n        highlightedLabel,\n        showLabel\n      );\n    }\n  }, [annotations, resizeSize, showLabel, highlightedLabel]);\n\n  return (\n    <Card sx={{ margin: \"auto\", marginTop: 3 }}>\n      <CardHeader\n        sx={{ background: theme.palette.secondary.main }}\n        action={\n          <IconButton\n            aria-label=\"settings\"\n            onClick={() => {\n              console.log(`${id} is deleted`);\n              dispatch(removeImage({ id: id }));\n            }}\n          >\n            <DeleteIcon />\n          </IconButton>\n        }\n        title={title}\n        subheader={new Date(dateCreated).toDateString()}\n      />\n      <CardMedia>\n        <div\n          style={{\n            width: resizeSize[0],\n            height: resizeSize[1],\n            position: \"relative\",\n            marginRight: \"auto\",\n            marginLeft: \"auto\",\n            cursor: \"pointer\",\n          }}\n          onClick={onClick}\n        >\n          <canvas\n            ref={imageRef}\n            width={resizeSize[0]}\n            height={resizeSize[1]}\n            style={{ position: \"absolute\" }}\n          />\n          <canvas\n            ref={annotationCanvasRef}\n            style={{ position: \"absolute\" }}\n            width={resizeSize[0]}\n            height={resizeSize[1]}\n          />\n        </div>\n      </CardMedia>\n      <CardContent\n        sx={{\n          background: theme.palette.background.paper,\n          flexWrap: \"wrap\",\n          overflow: \"auto\",\n          width: resizeSize[0],\n        }}\n      >\n        {renderAnnotationChips(annotations)}\n      </CardContent>\n      <CardActions\n        disableSpacing\n        sx={{\n          position: \"relative\",\n          background: theme.palette.secondary.main,\n        }}\n      >\n        <IconButton\n          aria-label=\"add to favorites\"\n          sx={{ marginRight: \"auto\" }}\n          onClick={() => {\n            dispatch(\n              updateImage({\n                id: id,\n                src: src,\n                title: title,\n                dateCreated: dateCreated,\n                highlighted: !highlighted,\n                annotations: annotations,\n              })\n            );\n          }}\n        >\n          {highlighted ? <StarIcon /> : <StarBorderIcon />}\n        </IconButton>\n\n        <InferenceMenu src={src} updateAnnotation={updateInferenceResult} />\n      </CardActions>\n    </Card>\n  );\n}\n","import Modal from \"@mui/material/Modal\";\nimport Container from \"@mui/material/Container\";\nimport ImageCard, { imageCardProps } from \"./ImageCard\";\nimport { useAppSelector } from \"../app/hooks\";\nimport { imageCardObject } from \"../util/types\";\nimport { useState } from \"react\";\n\nexport default function CustomImageList() {\n  const [modalCardId, setModalCardId] = useState<null | string>(null);\n  const images = useAppSelector((state) => state.images.images);\n\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          justifyItems: \"center\",\n          alignContent: \"center\",\n        }}\n      >\n        {images.map((image: imageCardObject) => {\n          const props: imageCardProps = {\n            ...image,\n            width: window.innerWidth * 0.5,\n            height: window.innerHeight * 0.5,\n            onClick: () => {\n              setModalCardId(image.id);\n            },\n          };\n          return (\n            <ImageCard {...props} key={`${props.id}-image-card-in-list`} />\n          );\n        })}\n      </div>\n      <Modal open={modalCardId !== null} onClose={() => setModalCardId(null)}>\n        <Container>\n          {modalCardId !== null &&\n            images\n              .filter((el: imageCardObject) => el.id === modalCardId)\n              .map((el: imageCardObject) => {\n                return (\n                  <ImageCard\n                    {...{\n                      ...el,\n                      width: window.innerWidth * 0.8,\n                      height: window.innerHeight * 0.8,\n                    }}\n                    key={`${el.id}-modal-card`}\n                  />\n                );\n              })}\n        </Container>\n      </Modal>\n    </>\n  );\n}\n","import AppBar from \"@mui/material/AppBar\";\nimport Typography from \"@mui/material/Typography\";\nimport { theme } from \"../App\";\n\nexport default function CustomAppbar() {\n  return (\n    <AppBar\n      sx={{\n        position: \"sticky\",\n        bottom: \"auto\",\n        top: 0,\n        padding: 2,\n        background: theme.palette.secondary.main,\n      }}\n    >\n      <Typography variant=\"h5\" component=\"div\" sx={{ flexGrow: 1 }}>\n        Welcome!\n      </Typography>\n    </AppBar>\n  );\n}\n","// MUI\nimport Fab from \"@mui/material/Fab\";\nimport CameraIcon from \"@mui/icons-material/Camera\";\nimport Modal from \"@mui/material/Modal\";\nimport Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\n\n// Other\nimport { useRef, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ImageCard from \"./ImageCard\";\nimport { useAppDispatch } from \"../app/hooks\";\nimport { addImage } from \"../app/imageState\";\nimport { imageCardObject } from \"../util/types\";\n\nexport default function AddContentFab() {\n  // States, Refs & vars\n  const [takenImage, setTakenImage] = useState<null | string>(null);\n  const [imageName, setImageName] = useState<null | string>(null);\n  const [dateCreated, setDateCreated] = useState<null | string>(null);\n  const inputFileRef = useRef<null | HTMLInputElement>(null);\n  const dispatch = useAppDispatch();\n\n  // Click functions\n  const handleModalClose = () => {\n    setImageName(null);\n    setTakenImage(null);\n  };\n\n  const resizeImageToMaximum1Mb = (img: string) => {\n    if (img.length > 1_000_000) {\n      const rescaleRatio = 1_000_000 / img.length;\n      console.log(`Rescale ratio: ${rescaleRatio}`);\n      const tmp_img = new Image();\n      tmp_img.onload = () => {\n        const rescaledSize = [\n          Math.floor(tmp_img.width * rescaleRatio),\n          Math.floor(tmp_img.height * rescaleRatio),\n        ];\n\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = rescaledSize[0];\n        canvas.height = rescaledSize[1];\n        const ctx = canvas.getContext(\"2d\");\n        ctx?.drawImage(tmp_img, 0, 0, rescaledSize[0], rescaledSize[1]);\n\n        setTakenImage(canvas.toDataURL(\"image/jpeg\", 1));\n      };\n      tmp_img.src = img;\n    } else {\n      setTakenImage(img);\n    }\n  };\n\n  const saveImage = () => {\n    const payload: imageCardObject = {\n      id: uuidv4(),\n      src: String(takenImage),\n      title: String(imageName),\n      dateCreated: String(dateCreated),\n      highlighted: false,\n      annotations: [],\n    };\n    dispatch(addImage(payload));\n    handleModalClose();\n  };\n\n  return (\n    <>\n      <Fab\n        sx={{ position: \"fixed\", bottom: 16, right: 16 }}\n        onClick={() => {\n          if (inputFileRef.current !== null) {\n            inputFileRef.current.click();\n          }\n        }}\n      >\n        <CameraIcon />\n      </Fab>\n      <Modal open={takenImage !== null} onClose={handleModalClose}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <ImageCard\n              id={uuidv4()}\n              src={takenImage !== null ? takenImage : \"\"}\n              annotations={[]}\n              width={window.innerWidth * 0.8}\n              height={window.innerHeight * 0.8}\n              title={imageName ? imageName : \"Your new image\"}\n              dateCreated={String(dateCreated)}\n              highlighted={false}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={6}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Button variant=\"contained\" size=\"large\" onClick={handleModalClose}>\n              Discard\n            </Button>\n          </Grid>\n          <Grid\n            item\n            xs={6}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Button variant=\"contained\" size=\"large\" onClick={saveImage}>\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </Modal>\n      <input\n        ref={inputFileRef}\n        type=\"file\"\n        style={{ display: \"none\" }}\n        accept=\"image/*\"\n        onChange={(inp) => {\n          if (inp.currentTarget.files !== null) {\n            const reader = new FileReader();\n            reader.onload = (e) => {\n              resizeImageToMaximum1Mb(String(e.target?.result));\n            };\n            setImageName(inp?.currentTarget.files[0].name);\n            setDateCreated(String(new Date()));\n            reader.readAsDataURL(inp.currentTarget.files[0]);\n          }\n        }}\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nimport CustomImageList from \"./components/CustomImageList\";\nimport CustomAppbar from \"./components/CustomAppbar\";\nimport AddContentFab from \"./components/AddContentFab\";\n\nexport const theme = createTheme({\n  palette: {\n    mode: \"dark\",\n    primary: {\n      main: \"#8a43c1\",\n    },\n    secondary: {\n      main: \"#375ee8\",\n    },\n    background: {\n      default: \"#353434\",\n      paper: \"#525252\",\n    },\n  },\n  spacing: 8,\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CustomAppbar />\n      <CustomImageList />\n      <AddContentFab />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport imageReducer from \"./imageState\";\n\nexport const store = configureStore({\n  reducer: {\n    images: imageReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}